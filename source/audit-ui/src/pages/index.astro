---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Dashboard - DekkhoIsho Audit">
	<div class="dashboard">
		<h1>Dashboard</h1>
		
		<div class="welcome-card">
			<h2>Welcome, <span id="user-name"></span>!</h2>
			<p>Role: <strong id="user-role"></strong></p>
		</div>
		
		<div class="stats-grid">
			<div class="stat-card">
				<div class="stat-icon">üìä</div>
				<div class="stat-content">
					<h3>Recent Events</h3>
					<p class="stat-value" id="events-count">Loading...</p>
					<a href="/live">View Live Traffic ‚Üí</a>
				</div>
			</div>
			
			<div class="stat-card">
				<div class="stat-icon">üìù</div>
				<div class="stat-content">
					<h3>Audit Logs</h3>
					<p class="stat-value" id="audit-count">Loading...</p>
					<a href="/audit">View Audit Logs ‚Üí</a>
				</div>
			</div>
			
			<div class="stat-card" id="rules-card">
				<div class="stat-icon">üõ°Ô∏è</div>
				<div class="stat-content">
					<h3>Security Rules</h3>
					<p class="stat-value" id="rules-count">Loading...</p>
					<a href="/rules">Manage Rules ‚Üí</a>
				</div>
			</div>
		</div>
		
		<div class="quick-links">
			<h2>Quick Actions</h2>
			<div class="links-grid">
				<a href="/live" class="quick-link">
					<span class="link-icon">üî¥</span>
					<span>Live Traffic Monitoring</span>
				</a>
				<a href="/audit" class="quick-link">
					<span class="link-icon">üîç</span>
					<span>Search Audit Logs</span>
				</a>
				<a href="/rules" class="quick-link" id="rules-quick-link">
					<span class="link-icon">‚öôÔ∏è</span>
					<span>Manage Security Rules</span>
				</a>
			</div>
		</div>
	</div>
</Layout>

<style>
	.dashboard {
		max-width: 1200px;
		margin: 0 auto;
	}
	h1 {
		color: #1a1a2e;
		margin-bottom: 2rem;
		font-size: 2.5rem;
	}
	.welcome-card {
		background: white;
		padding: 2rem;
		border-radius: 8px;
		box-shadow: 0 2px 8px rgba(0,0,0,0.1);
		margin-bottom: 2rem;
	}
	.welcome-card h2 {
		color: #1a1a2e;
		margin-bottom: 0.5rem;
	}
	.welcome-card p {
		color: #666;
		font-size: 1.1rem;
	}
	.stats-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
		gap: 1.5rem;
		margin-bottom: 3rem;
	}
	.stat-card {
		background: white;
		padding: 2rem;
		border-radius: 8px;
		box-shadow: 0 2px 8px rgba(0,0,0,0.1);
		display: flex;
		gap: 1.5rem;
	}
	.stat-icon {
		font-size: 3rem;
	}
	.stat-content {
		flex: 1;
	}
	.stat-content h3 {
		color: #666;
		font-size: 0.9rem;
		font-weight: 500;
		margin-bottom: 0.5rem;
		text-transform: uppercase;
		letter-spacing: 0.5px;
	}
	.stat-value {
		font-size: 2rem;
		font-weight: 700;
		color: #1a1a2e;
		margin-bottom: 0.5rem;
	}
	.stat-content a {
		color: #4ecca3;
		text-decoration: none;
		font-size: 0.9rem;
		font-weight: 500;
	}
	.stat-content a:hover {
		text-decoration: underline;
	}
	.quick-links h2 {
		color: #1a1a2e;
		margin-bottom: 1rem;
		font-size: 1.5rem;
	}
	.links-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
		gap: 1rem;
	}
	.quick-link {
		background: white;
		padding: 1.5rem;
		border-radius: 8px;
		box-shadow: 0 2px 8px rgba(0,0,0,0.1);
		text-decoration: none;
		color: #333;
		display: flex;
		align-items: center;
		gap: 1rem;
		transition: transform 0.2s, box-shadow 0.2s;
	}
	.quick-link:hover {
		transform: translateY(-2px);
		box-shadow: 0 4px 12px rgba(0,0,0,0.15);
	}
	.link-icon {
		font-size: 2rem;
	}
</style>

<script>
	import { isAuthenticated, getUser, hasRole } from '../utils/auth';
	import { api } from '../utils/api';

	// Check authentication FIRST - before anything else
	if (!isAuthenticated()) {
		window.location.replace('/login');
		throw new Error('Not authenticated'); // Stop execution
	}

	// Display user info
	const user = getUser();
	if (user) {
		const nameEl = document.getElementById('user-name');
		const roleEl = document.getElementById('user-role');
		if (nameEl) nameEl.textContent = user.username;
		if (roleEl) roleEl.textContent = user.role.toUpperCase();
		
		// Hide rules card if viewer
		if (!hasRole('analyst')) {
			const rulesCard = document.getElementById('rules-card');
			const rulesQuickLink = document.getElementById('rules-quick-link');
			if (rulesCard) rulesCard.style.display = 'none';
			if (rulesQuickLink) rulesQuickLink.style.display = 'none';
		}
	}

	// Load stats
	async function loadStats() {
		try {
			// Get events count
			const eventsRes = await api.get('/events/recent?limit=1');
			const eventsCount = eventsRes.data.meta?.pagination?.total_count || 0;
			const eventsEl = document.getElementById('events-count');
			if (eventsEl) eventsEl.textContent = eventsCount.toLocaleString();
			
			// Get audit logs count
			const auditRes = await api.get('/audit/logs?limit=1');
			const auditCount = auditRes.data.meta?.pagination?.total_count || 0;
			const auditEl = document.getElementById('audit-count');
			if (auditEl) auditEl.textContent = auditCount.toLocaleString();
			
			// Get rules count (if has access)
			if (hasRole('analyst')) {
				const rulesRes = await api.get('/rules?limit=1');
				const rulesCount = rulesRes.data.meta?.pagination?.total_count || 0;
				const rulesEl = document.getElementById('rules-count');
				if (rulesEl) rulesEl.textContent = rulesCount.toLocaleString();
			}
		} catch (error) {
			console.error('Failed to load stats:', error);
		}
	}

	// Only load stats if authenticated
	loadStats();
</script>
